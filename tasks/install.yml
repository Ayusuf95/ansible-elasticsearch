---

- name: Install python-software-properties
  apt:
    pkg=python-software-properties
    state=present

- name: Install dependencies
  apt:
    pkg={{ item }}
    state=present
  with_items: "{{ elasticsearch_apt_dependencies }}"

- name: Configuring elastic group
  group:
    name={{ elasticsearch_group }}

- name: Configuring elastic user
  user:
    name={{ elasticsearch_user }}
    group={{ elasticsearch_group }}
    createhome=no

- name: Check if we have elastic with same version installed
  stat:
    path="/usr/share/elasticsearch/lib/elasticsearch-{{ elasticsearch_version }}.jar"
  register: installed_version

- name: Try to stop elasticsearch if running
  service:
    name=elasticsearch
    state=stopped
  ignore_errors: yes
  when: not installed_version.stat.exists

- name: Download Elasticsearch deb
  get_url:
    url={{ elasticsearch_download_url }}/elasticsearch-{{ elasticsearch_version }}.deb
    dest=/tmp/elasticsearch-{{ elasticsearch_version }}.deb
    mode=0440
  when: not installed_version.stat.exists

#shell: dpkg --remove elasticsearch
- name: Uninstalling previous version if applicable
  apt:
     name="elasticsearch"
     state="absent"
  when: not installed_version.stat.exists

- name: Remove elasticsearch directory
  file:
    path="{{ elasticsearch_home_dir }}"
    state=absent
  when: not installed_version.stat.exists

- name: Install Elasticsearch deb
  shell: dpkg -i -E --force-confnew /tmp/elasticsearch-{{ elasticsearch_version }}.deb
  when: not installed_version.stat.exists
  notify: Restart Elasticsearch

- name: Ensure Elasticsearch-owned directories exist
  file: path="{{ item }}" state=directory owner={{ elasticsearch_user }} group={{ elasticsearch_group }} recurse=yes mode=0755
  with_items:
    - "{{ elasticsearch_log_dir }}"
    - "{{ elasticsearch_data_dir }}"

- name: Ensure root-owned directories exist
  file: path="{{ item }}" state=directory owner=root group=root recurse=yes mode=0755
  with_items:
    - "{{ elasticsearch_conf_dir }}"

- name: Installing Custom JARs
  get_url: url="{{ item.uri }}" url_username="{{ item.user }}" url_password="{{ item.passwd }}" dest="{{ elasticsearch_home_dir }}/lib/{{ item.filename }}" owner=root group=root mode=0644
  when: "{{ elasticsearch_custom_jars }}"
  with_items: elasticsearch_custom_jars
